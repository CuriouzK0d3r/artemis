apiVersion: {{ template "artemis.deployment.apiVersion" . }}
kind: Deployment
metadata:
  labels:
    app: {{ .Release.Name }}-autostarter
{{ include "artemis.labels" . | indent 4 }}
  name: {{ .Release.Name }}-autostarter
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-autostarter
  replicas: {{ .Values.replicaCount | default 1 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-autostarter
    spec:
      initContainers:
      - name: wait-for-rmq
        image: busybox
        command: ['sh', '-c', 'until nc -z {{ .Release.Name }}-{{ .Values.rabbitmqHost }} {{ .Values.rabbitmqPort }}; do echo waiting for services; sleep 10; done;']
      - name: wait-for-pg
        image: busybox
        command: [ 'sh', '-c', 'until nc -z {{ .Release.Name }}-{{ .Values.dbHost }} {{ .Values.dbPort }}; do echo waiting for services; sleep 10; done;' ]
      - name: wait-for-database
        image: busybox
        command: [ 'sh', '-c', 'until nc -z {{ .Release.Name }}-database {{ .Values.restPort }}; do echo waiting for services; sleep 10; done;' ]
      - name: wait-for-prefixtree
        image: busybox
        command: [ 'sh', '-c', 'until nc -z {{ .Release.Name }}-prefixtree {{ .Values.restPort }}; do echo waiting for services; sleep 10; done;' ]
      - name: wait-for-configuration
        image: busybox
        command: [ 'sh', '-c', 'until nc -z {{ .Release.Name }}-configuration {{ .Values.restPort }}; do echo waiting for services; sleep 10; done;' ]
      - name: wait-for-fileobserver
        image: busybox
        command: [ 'sh', '-c', 'until nc -z {{ .Release.Name }}-fileobserver {{ .Values.restPort }}; do echo waiting for services; sleep 10; done;' ]
      - name: wait-for-autoignore
        image: busybox
        command: [ 'sh', '-c', 'until nc -z {{ .Release.Name }}-autoignore {{ .Values.restPort }}; do echo waiting for services; sleep 10; done;' ]
      - name: wait-for-notifier
        image: busybox
        command: [ 'sh', '-c', 'until nc -z {{ .Release.Name }}-notifier {{ .Values.restPort }}; do echo waiting for services; sleep 10; done;' ]
      - name: wait-for-detection
        image: busybox
        command: [ 'sh', '-c', 'until nc -z {{ .Release.Name }}-detection {{ .Values.restPort }}; do echo waiting for services; sleep 10; done;' ]
      - name: wait-for-mitigation
        image: busybox
        command: [ 'sh', '-c', 'until nc -z {{ .Release.Name }}-mitigation {{ .Values.restPort }}; do echo waiting for services; sleep 10; done;' ]
      - name: wait-for-riperistap
        image: busybox
        command: [ 'sh', '-c', 'until nc -z {{ .Release.Name }}-riperistap {{ .Values.restPort }}; do echo waiting for services; sleep 10; done;' ]
      - name: wait-for-bgpstreamlivetap
        image: busybox
        command: [ 'sh', '-c', 'until nc -z {{ .Release.Name }}-bgpstreamlivetap {{ .Values.restPort }}; do echo waiting for services; sleep 10; done;' ]
      - name: wait-for-bgpstreamkafkatap
        image: busybox
        command: [ 'sh', '-c', 'until nc -z {{ .Release.Name }}-bgpstreamkafkatap {{ .Values.restPort }}; do echo waiting for services; sleep 10; done;' ]
      - name: wait-for-bgpstreamhisttap
        image: busybox
        command: [ 'sh', '-c', 'until nc -z {{ .Release.Name }}-bgpstreamhisttap {{ .Values.restPort }}; do echo waiting for services; sleep 10; done;' ]
      - name: wait-for-exabgptap
        image: busybox
        command: [ 'sh', '-c', 'until nc -z {{ .Release.Name }}-exabgptap {{ .Values.restPort }}; do echo waiting for services; sleep 10; done;' ]
      containers:
      - env:
        - name: RELEASE_NAME
          value: {{ .Release.Name }}
        - name: AUTO_RECOVER_PROCESS_STATE
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: autoRecoverProcessState
        - name: CHECK_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: checkInterval
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: dbHost
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: dbName
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secret
              key: dbPass
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: dbPort
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: dbUser
        - name: REST_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: restPort
        - name: TEST_ENV
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: testEnv
        image: inspiregroup/artemis-autostarter:{{ .Values.systemVersion }}
        imagePullPolicy: Always
        name: autostarter
        resources: {}
        volumeMounts:
        - mountPath: /etc/artemis/logging.yaml
          name: autostarter-configmap
          subPath: logging.yaml
      restartPolicy: Always
      volumes:
      - configMap:
          name: {{ .Release.Name }}-volumes
        name: autostarter-configmap
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | nindent 8 }}
      {{- end }}
