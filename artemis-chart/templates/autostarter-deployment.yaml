apiVersion: {{ template "artemis.deployment.apiVersion" . }}
kind: Deployment
metadata:
  labels:
    app: autostarter
{{ include "artemis.labels" . | indent 4 }}
  name: autostarter
spec:
  selector:
    matchLabels:
      app: autostarter
  replicas: {{ .Values.replicaCount | default 1 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: autostarter
    spec:
      initContainers:
      - name: wait-for-rmq
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c', 'until nc -z {{ .Values.rabbitmqHost }} {{ .Values.rabbitmqPort }}; do echo waiting for services; sleep 10; done;']
      - name: wait-for-pg
        image: busybox
        imagePullPolicy: IfNotPresent
        command: [ 'sh', '-c', 'until nc -z {{ .Values.dbHost }} {{ .Values.dbPort }}; do echo waiting for services; sleep 10; done;' ]
      - name: wait-for-database
        image: busybox
        imagePullPolicy: IfNotPresent
        command: [ 'sh', '-c', 'until nc -z database {{ .Values.restPort }}; do echo waiting for services; sleep 10; done;' ]
      - name: wait-for-prefixtree
        image: busybox
        imagePullPolicy: IfNotPresent
        command: [ 'sh', '-c', 'until nc -z prefixtree {{ .Values.restPort }}; do echo waiting for services; sleep 10; done;' ]
      - name: wait-for-configuration
        image: busybox
        imagePullPolicy: IfNotPresent
        command: [ 'sh', '-c', 'until nc -z configuration {{ .Values.restPort }}; do echo waiting for services; sleep 10; done;' ]
      - name: wait-for-fileobserver
        image: busybox
        imagePullPolicy: IfNotPresent
        command: [ 'sh', '-c', 'until nc -z fileobserver {{ .Values.restPort }}; do echo waiting for services; sleep 10; done;' ]
      - name: wait-for-autoignore
        image: busybox
        imagePullPolicy: IfNotPresent
        command: [ 'sh', '-c', 'until nc -z autoignore {{ .Values.restPort }}; do echo waiting for services; sleep 10; done;' ]
      - name: wait-for-notifier
        image: busybox
        imagePullPolicy: IfNotPresent
        command: [ 'sh', '-c', 'until nc -z notifier {{ .Values.restPort }}; do echo waiting for services; sleep 10; done;' ]
      - name: wait-for-detection
        image: busybox
        imagePullPolicy: IfNotPresent
        command: [ 'sh', '-c', 'until nc -z detection {{ .Values.restPort }}; do echo waiting for services; sleep 10; done;' ]
      - name: wait-for-mitigation
        image: busybox
        imagePullPolicy: IfNotPresent
        command: [ 'sh', '-c', 'until nc -z mitigation {{ .Values.restPort }}; do echo waiting for services; sleep 10; done;' ]
      - name: wait-for-riperistap
        image: busybox
        imagePullPolicy: IfNotPresent
        command: [ 'sh', '-c', 'until nc -z riperistap {{ .Values.restPort }}; do echo waiting for services; sleep 10; done;' ]
      - name: wait-for-bgpstreamlivetap
        image: busybox
        imagePullPolicy: IfNotPresent
        command: [ 'sh', '-c', 'until nc -z bgpstreamlivetap {{ .Values.restPort }}; do echo waiting for services; sleep 10; done;' ]
      - name: wait-for-bgpstreamkafkatap
        image: busybox
        imagePullPolicy: IfNotPresent
        command: [ 'sh', '-c', 'until nc -z bgpstreamkafkatap {{ .Values.restPort }}; do echo waiting for services; sleep 10; done;' ]
      - name: wait-for-bgpstreamhisttap
        image: busybox
        imagePullPolicy: IfNotPresent
        command: [ 'sh', '-c', 'until nc -z bgpstreamhisttap {{ .Values.restPort }}; do echo waiting for services; sleep 10; done;' ]
      - name: wait-for-exabgptap
        image: busybox
        imagePullPolicy: IfNotPresent
        command: [ 'sh', '-c', 'until nc -z exabgptap {{ .Values.restPort }}; do echo waiting for services; sleep 10; done;' ]
      containers:
      - env:
        - name: AUTO_RECOVER_PROCESS_STATE
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: autoRecoverProcessState
        - name: CHECK_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: checkInterval
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: dbHost
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: dbName
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: secret
              key: dbPass
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: dbPort
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: dbUser
        - name: REST_PORT
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: restPort
        - name: TEST_ENV
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: testEnv
        image: inspiregroup/artemis-autostarter:{{ .Values.systemVersion }}
        imagePullPolicy: IfNotPresent
        name: autostarter
        resources: {}
        volumeMounts:
        - mountPath: /etc/artemis/logging.yaml
          name: autostarter-configmap
          subPath: logging.yaml
      restartPolicy: Always
      volumes:
      - configMap:
          name: volumes
        name: autostarter-configmap
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | nindent 8 }}
      {{- end }}
