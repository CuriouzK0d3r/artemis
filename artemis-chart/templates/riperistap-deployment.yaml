apiVersion: {{ template "artemis.deployment.apiVersion" . }}
kind: Deployment
metadata:
  labels:
    app: riperistap
{{ include "artemis.labels" . | indent 4 }}
  name: riperistap
spec:
  selector:
    matchLabels:
      app: riperistap
  replicas: {{ .Values.replicaCount | default 1 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: riperistap
    spec:
      initContainers:
      - name: wait-for-rmq
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ['sh', '-c', 'until nc -z {{ .Values.rabbitmqHost }} {{ .Values.rabbitmqPort}}; do echo waiting for services; sleep 10; done;']
      - name: wait-for-redis
        image: busybox
        imagePullPolicy: IfNotPresent
        command: [ 'sh', '-c', 'until nc -z {{ .Values.redisHost }} {{ .Values.redisPort }}; do echo waiting for services; sleep 10; done;' ]
      - name: wait-for-prefixtree
        image: busybox
        imagePullPolicy: IfNotPresent
        command: [ 'sh', '-c', 'until nc -z prefixtree {{ .Values.restPort }}; do echo waiting for services; sleep 10; done;' ]
      containers:
      - env:
        - name: MON_TIMEOUT_LAST_BGP_UPDATE
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: monTimeoutLastBgpUpdate
        - name: RABBITMQ_HOST
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: rabbitmqHost
        - name: RABBITMQ_PASS
          valueFrom:
            secretKeyRef:
              name: secret
              key: rabbitmqPass
        - name: RABBITMQ_PORT
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: rabbitmqPort
        - name: RABBITMQ_USER
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: rabbitmqUser
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: redisHost
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: redisPort
        - name: REST_PORT
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: restPort
        - name: RIS_ID
          valueFrom:
            configMapKeyRef:
              name: configmap
              key: risId
        image: inspiregroup/artemis-riperistap:{{ .Values.systemVersion }}
        imagePullPolicy: IfNotPresent
        name: riperistap
        resources: {}
        volumeMounts:
        - mountPath: /etc/artemis/logging.yaml
          name: riperistap-configmap
          subPath: logging.yaml
      restartPolicy: Always
      volumes:
      - configMap:
          name: volumes
        name: riperistap-configmap
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | nindent 8 }}
      {{- end }}
