apiVersion: {{ template "artemis.deployment.apiVersion" . }}
kind: Deployment
metadata:
  labels:
    app: {{ .Release.Name }}-notifier
{{ include "artemis.labels" . | indent 4 }}
  name: {{ .Release.Name }}-notifier
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}-notifier
  replicas: {{ .Values.replicaCount | default 1 }}
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Release.Name }}-notifier
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      initContainers:
      - name: populate-pvc
        image: busybox
        volumeMounts:
        - mountPath: /configmaps
          name: notifier-configmap
        - mountPath: /pvc
          name: notifier-pvc
          subPath: configs
        command: ['sh', '-c', 'false | cp -i /configmaps/logging.yaml /pvc/ 2> /dev/null']
      - name: wait-for-rmq
        image: busybox
        command: ['sh', '-c', 'until nc -z {{ .Release.Name }}-{{ .Values.rabbitmqHost }}-svc {{ .Values.rabbitmqPort }}; do echo waiting for services; sleep 10; done;']
      containers:
      - env:
        - name: RABBITMQ_HOST
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: rabbitmqHost
        - name: RABBITMQ_PASS
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secret
              key: rabbitmqPass
        - name: RABBITMQ_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: rabbitmqPort
        - name: RABBITMQ_USER
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: rabbitmqUser
        - name: REST_PORT
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-configmap
              key: restPort
        image: inspiregroup/artemis-notifier:{{ .Values.systemVersion }}
        imagePullPolicy: Always
        name: notifier
        resources: {}
        volumeMounts:
        - mountPath: /etc/artemis/logging.yaml
          name: notifier-pvc
          subPath: configs/logging.yaml
      restartPolicy: Always
      volumes:
      - configMap:
          name: {{ .Release.Name }}-volumes
        name: notifier-configmap
      - persistentVolumeClaim:
          claimName: {{ .Release.Name }}-notifier-pvc
        name: notifier-pvc
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | nindent 8 }}
      {{- end }}
status: {}
